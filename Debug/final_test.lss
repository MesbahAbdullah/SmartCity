
final_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000484  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000484  000004f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000050e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000540  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ab0  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007fe  00000000  00000000  000010c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000558  00000000  00000000  000018c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000011c  00000000  00000000  00001e1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000047d  00000000  00000000  00001f38  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000264  00000000  00000000  000023b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002619  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e8       	ldi	r30, 0x84	; 132
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 37       	cpi	r26, 0x76	; 118
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 97 00 	call	0x12e	; 0x12e <main>
  8a:	0c 94 40 02 	jmp	0x480	; 0x480 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADC_u16ReadChannel>:
u16 ADC_u16ReadChannel(u8 channel_num)
{

	// select the corresponding channel 0~7
	
	channel_num &= 0b00000111;  // AND operation with 7
  92:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8)|channel_num;
  94:	97 b1       	in	r25, 0x07	; 7
  96:	98 7f       	andi	r25, 0xF8	; 248
  98:	89 2b       	or	r24, r25
  9a:	87 b9       	out	0x07, r24	; 7

	// start single conversion
	// write '1' to ADSC
	ADCSRA |= (1<<ADSC);
  9c:	86 b1       	in	r24, 0x06	; 6
  9e:	80 64       	ori	r24, 0x40	; 64
  a0:	86 b9       	out	0x06, r24	; 6

	// wait for conversion to complete
	// ADSC becomes '0' again
	
	while(ADCSRA & (1<<ADSC));
  a2:	36 99       	sbic	0x06, 6	; 6
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <ADC_u16ReadChannel+0x10>

	return (ADC);
  a6:	84 b1       	in	r24, 0x04	; 4
  a8:	95 b1       	in	r25, 0x05	; 5
}
  aa:	08 95       	ret

000000ac <TEMP_VidReadValue>:
   u16 adc_result0=0;
   u8 tempBuffer[10];
   adc_result0 = ADC_u16ReadChannel(GAS_PIN);
   itoa(adc_result0,tempBuffer,10);
   UART_VidSendString((u8*)tempBuffer);
}
  ac:	cf 93       	push	r28
  ae:	df 93       	push	r29
  b0:	cd b7       	in	r28, 0x3d	; 61
  b2:	de b7       	in	r29, 0x3e	; 62
  b4:	2a 97       	sbiw	r28, 0x0a	; 10
  b6:	0f b6       	in	r0, 0x3f	; 63
  b8:	f8 94       	cli
  ba:	de bf       	out	0x3e, r29	; 62
  bc:	0f be       	out	0x3f, r0	; 63
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	0e 94 49 00 	call	0x92	; 0x92 <ADC_u16ReadChannel>
  c6:	bc 01       	movw	r22, r24
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 72 01 	call	0x2e4	; 0x2e4 <__floatunsisf>
  d0:	27 ed       	ldi	r18, 0xD7	; 215
  d2:	33 ea       	ldi	r19, 0xA3	; 163
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	50 e4       	ldi	r21, 0x40	; 64
  d8:	0e 94 ca 00 	call	0x194	; 0x194 <__divsf3>
  dc:	0e 94 3c 01 	call	0x278	; 0x278 <__fixsfsi>
  e0:	dc 01       	movw	r26, r24
  e2:	cb 01       	movw	r24, r22
  e4:	4a e0       	ldi	r20, 0x0A	; 10
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	be 01       	movw	r22, r28
  ea:	6f 5f       	subi	r22, 0xFF	; 255
  ec:	7f 4f       	sbci	r23, 0xFF	; 255
  ee:	0e 94 00 02 	call	0x400	; 0x400 <itoa>
  f2:	80 e6       	ldi	r24, 0x60	; 96
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	0e 94 b7 00 	call	0x16e	; 0x16e <UART_VidSendString>
  fa:	ce 01       	movw	r24, r28
  fc:	01 96       	adiw	r24, 0x01	; 1
  fe:	0e 94 b7 00 	call	0x16e	; 0x16e <UART_VidSendString>
 102:	86 e6       	ldi	r24, 0x66	; 102
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 b7 00 	call	0x16e	; 0x16e <UART_VidSendString>
 10a:	2f ef       	ldi	r18, 0xFF	; 255
 10c:	83 ed       	ldi	r24, 0xD3	; 211
 10e:	90 e3       	ldi	r25, 0x30	; 48
 110:	21 50       	subi	r18, 0x01	; 1
 112:	80 40       	sbci	r24, 0x00	; 0
 114:	90 40       	sbci	r25, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <TEMP_VidReadValue+0x64>
 118:	00 c0       	rjmp	.+0      	; 0x11a <TEMP_VidReadValue+0x6e>
 11a:	00 00       	nop
 11c:	2a 96       	adiw	r28, 0x0a	; 10
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	f8 94       	cli
 122:	de bf       	out	0x3e, r29	; 62
 124:	0f be       	out	0x3f, r0	; 63
 126:	cd bf       	out	0x3d, r28	; 61
 128:	df 91       	pop	r29
 12a:	cf 91       	pop	r28
 12c:	08 95       	ret

0000012e <main>:
int main(void)
{

	
	UART_VidInt();	
 12e:	0e 94 a9 00 	call	0x152	; 0x152 <UART_VidInt>
		 
    UART_VidSendString((u8*)"HI HOW ARE U ");
 132:	88 e6       	ldi	r24, 0x68	; 104
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	0e 94 b7 00 	call	0x16e	; 0x16e <UART_VidSendString>

	  /* MQ-135 operating */
	  //GAS_VidReadValue();
	 // _delay_ms(2000);

	 TEMP_VidReadValue();
 13a:	0e 94 56 00 	call	0xac	; 0xac <TEMP_VidReadValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13e:	2f ef       	ldi	r18, 0xFF	; 255
 140:	87 ea       	ldi	r24, 0xA7	; 167
 142:	91 e6       	ldi	r25, 0x61	; 97
 144:	21 50       	subi	r18, 0x01	; 1
 146:	80 40       	sbci	r24, 0x00	; 0
 148:	90 40       	sbci	r25, 0x00	; 0
 14a:	e1 f7       	brne	.-8      	; 0x144 <main+0x16>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0x20>
 14e:	00 00       	nop
 150:	f4 cf       	rjmp	.-24     	; 0x13a <main+0xc>

00000152 <UART_VidInt>:
{
    /* Wait for data to be received */
    while(GET_BIT(UART_UCSRA , 7) == 0);
    /* Get and return received data from buffer */
    return UDR;
}
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	8b b9       	out	0x0b, r24	; 11
 156:	88 e1       	ldi	r24, 0x18	; 24
 158:	8a b9       	out	0x0a, r24	; 10
 15a:	86 e8       	ldi	r24, 0x86	; 134
 15c:	80 bd       	out	0x20, r24	; 32
 15e:	10 bc       	out	0x20, r1	; 32
 160:	80 e1       	ldi	r24, 0x10	; 16
 162:	89 b9       	out	0x09, r24	; 9
 164:	08 95       	ret

00000166 <UART_VidSentByte>:
 166:	5d 9b       	sbis	0x0b, 5	; 11
 168:	fe cf       	rjmp	.-4      	; 0x166 <UART_VidSentByte>
 16a:	8c b9       	out	0x0c, r24	; 12
 16c:	08 95       	ret

0000016e <UART_VidSendString>:

void UART_VidSendString( u8 * Copy_ptrString ){
 16e:	0f 93       	push	r16
 170:	1f 93       	push	r17
 172:	cf 93       	push	r28
 174:	8c 01       	movw	r16, r24

	u8 LOC_u8Iterator = 0 ;
 176:	c0 e0       	ldi	r28, 0x00	; 0

	while ( Copy_ptrString[ LOC_u8Iterator ] != '\0' ){
 178:	03 c0       	rjmp	.+6      	; 0x180 <UART_VidSendString+0x12>

		UART_VidSentByte( Copy_ptrString[ LOC_u8Iterator ] );
 17a:	0e 94 b3 00 	call	0x166	; 0x166 <UART_VidSentByte>
		LOC_u8Iterator++ ;
 17e:	cf 5f       	subi	r28, 0xFF	; 255

void UART_VidSendString( u8 * Copy_ptrString ){

	u8 LOC_u8Iterator = 0 ;

	while ( Copy_ptrString[ LOC_u8Iterator ] != '\0' ){
 180:	f8 01       	movw	r30, r16
 182:	ec 0f       	add	r30, r28
 184:	f1 1d       	adc	r31, r1
 186:	80 81       	ld	r24, Z
 188:	81 11       	cpse	r24, r1
 18a:	f7 cf       	rjmp	.-18     	; 0x17a <UART_VidSendString+0xc>
		UART_VidSentByte( Copy_ptrString[ LOC_u8Iterator ] );
		LOC_u8Iterator++ ;

	}

}
 18c:	cf 91       	pop	r28
 18e:	1f 91       	pop	r17
 190:	0f 91       	pop	r16
 192:	08 95       	ret

00000194 <__divsf3>:
 194:	0e 94 de 00 	call	0x1bc	; 0x1bc <__divsf3x>
 198:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__fp_round>
 19c:	0e 94 bf 01 	call	0x37e	; 0x37e <__fp_pscB>
 1a0:	58 f0       	brcs	.+22     	; 0x1b8 <__divsf3+0x24>
 1a2:	0e 94 b8 01 	call	0x370	; 0x370 <__fp_pscA>
 1a6:	40 f0       	brcs	.+16     	; 0x1b8 <__divsf3+0x24>
 1a8:	29 f4       	brne	.+10     	; 0x1b4 <__divsf3+0x20>
 1aa:	5f 3f       	cpi	r21, 0xFF	; 255
 1ac:	29 f0       	breq	.+10     	; 0x1b8 <__divsf3+0x24>
 1ae:	0c 94 af 01 	jmp	0x35e	; 0x35e <__fp_inf>
 1b2:	51 11       	cpse	r21, r1
 1b4:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__fp_szero>
 1b8:	0c 94 b5 01 	jmp	0x36a	; 0x36a <__fp_nan>

000001bc <__divsf3x>:
 1bc:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__fp_split3>
 1c0:	68 f3       	brcs	.-38     	; 0x19c <__divsf3+0x8>

000001c2 <__divsf3_pse>:
 1c2:	99 23       	and	r25, r25
 1c4:	b1 f3       	breq	.-20     	; 0x1b2 <__divsf3+0x1e>
 1c6:	55 23       	and	r21, r21
 1c8:	91 f3       	breq	.-28     	; 0x1ae <__divsf3+0x1a>
 1ca:	95 1b       	sub	r25, r21
 1cc:	55 0b       	sbc	r21, r21
 1ce:	bb 27       	eor	r27, r27
 1d0:	aa 27       	eor	r26, r26
 1d2:	62 17       	cp	r22, r18
 1d4:	73 07       	cpc	r23, r19
 1d6:	84 07       	cpc	r24, r20
 1d8:	38 f0       	brcs	.+14     	; 0x1e8 <__divsf3_pse+0x26>
 1da:	9f 5f       	subi	r25, 0xFF	; 255
 1dc:	5f 4f       	sbci	r21, 0xFF	; 255
 1de:	22 0f       	add	r18, r18
 1e0:	33 1f       	adc	r19, r19
 1e2:	44 1f       	adc	r20, r20
 1e4:	aa 1f       	adc	r26, r26
 1e6:	a9 f3       	breq	.-22     	; 0x1d2 <__divsf3_pse+0x10>
 1e8:	35 d0       	rcall	.+106    	; 0x254 <__divsf3_pse+0x92>
 1ea:	0e 2e       	mov	r0, r30
 1ec:	3a f0       	brmi	.+14     	; 0x1fc <__divsf3_pse+0x3a>
 1ee:	e0 e8       	ldi	r30, 0x80	; 128
 1f0:	32 d0       	rcall	.+100    	; 0x256 <__divsf3_pse+0x94>
 1f2:	91 50       	subi	r25, 0x01	; 1
 1f4:	50 40       	sbci	r21, 0x00	; 0
 1f6:	e6 95       	lsr	r30
 1f8:	00 1c       	adc	r0, r0
 1fa:	ca f7       	brpl	.-14     	; 0x1ee <__divsf3_pse+0x2c>
 1fc:	2b d0       	rcall	.+86     	; 0x254 <__divsf3_pse+0x92>
 1fe:	fe 2f       	mov	r31, r30
 200:	29 d0       	rcall	.+82     	; 0x254 <__divsf3_pse+0x92>
 202:	66 0f       	add	r22, r22
 204:	77 1f       	adc	r23, r23
 206:	88 1f       	adc	r24, r24
 208:	bb 1f       	adc	r27, r27
 20a:	26 17       	cp	r18, r22
 20c:	37 07       	cpc	r19, r23
 20e:	48 07       	cpc	r20, r24
 210:	ab 07       	cpc	r26, r27
 212:	b0 e8       	ldi	r27, 0x80	; 128
 214:	09 f0       	breq	.+2      	; 0x218 <__divsf3_pse+0x56>
 216:	bb 0b       	sbc	r27, r27
 218:	80 2d       	mov	r24, r0
 21a:	bf 01       	movw	r22, r30
 21c:	ff 27       	eor	r31, r31
 21e:	93 58       	subi	r25, 0x83	; 131
 220:	5f 4f       	sbci	r21, 0xFF	; 255
 222:	3a f0       	brmi	.+14     	; 0x232 <__divsf3_pse+0x70>
 224:	9e 3f       	cpi	r25, 0xFE	; 254
 226:	51 05       	cpc	r21, r1
 228:	78 f0       	brcs	.+30     	; 0x248 <__divsf3_pse+0x86>
 22a:	0c 94 af 01 	jmp	0x35e	; 0x35e <__fp_inf>
 22e:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__fp_szero>
 232:	5f 3f       	cpi	r21, 0xFF	; 255
 234:	e4 f3       	brlt	.-8      	; 0x22e <__divsf3_pse+0x6c>
 236:	98 3e       	cpi	r25, 0xE8	; 232
 238:	d4 f3       	brlt	.-12     	; 0x22e <__divsf3_pse+0x6c>
 23a:	86 95       	lsr	r24
 23c:	77 95       	ror	r23
 23e:	67 95       	ror	r22
 240:	b7 95       	ror	r27
 242:	f7 95       	ror	r31
 244:	9f 5f       	subi	r25, 0xFF	; 255
 246:	c9 f7       	brne	.-14     	; 0x23a <__divsf3_pse+0x78>
 248:	88 0f       	add	r24, r24
 24a:	91 1d       	adc	r25, r1
 24c:	96 95       	lsr	r25
 24e:	87 95       	ror	r24
 250:	97 f9       	bld	r25, 7
 252:	08 95       	ret
 254:	e1 e0       	ldi	r30, 0x01	; 1
 256:	66 0f       	add	r22, r22
 258:	77 1f       	adc	r23, r23
 25a:	88 1f       	adc	r24, r24
 25c:	bb 1f       	adc	r27, r27
 25e:	62 17       	cp	r22, r18
 260:	73 07       	cpc	r23, r19
 262:	84 07       	cpc	r24, r20
 264:	ba 07       	cpc	r27, r26
 266:	20 f0       	brcs	.+8      	; 0x270 <__divsf3_pse+0xae>
 268:	62 1b       	sub	r22, r18
 26a:	73 0b       	sbc	r23, r19
 26c:	84 0b       	sbc	r24, r20
 26e:	ba 0b       	sbc	r27, r26
 270:	ee 1f       	adc	r30, r30
 272:	88 f7       	brcc	.-30     	; 0x256 <__divsf3_pse+0x94>
 274:	e0 95       	com	r30
 276:	08 95       	ret

00000278 <__fixsfsi>:
 278:	0e 94 43 01 	call	0x286	; 0x286 <__fixunssfsi>
 27c:	68 94       	set
 27e:	b1 11       	cpse	r27, r1
 280:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__fp_szero>
 284:	08 95       	ret

00000286 <__fixunssfsi>:
 286:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_splitA>
 28a:	88 f0       	brcs	.+34     	; 0x2ae <__fixunssfsi+0x28>
 28c:	9f 57       	subi	r25, 0x7F	; 127
 28e:	98 f0       	brcs	.+38     	; 0x2b6 <__fixunssfsi+0x30>
 290:	b9 2f       	mov	r27, r25
 292:	99 27       	eor	r25, r25
 294:	b7 51       	subi	r27, 0x17	; 23
 296:	b0 f0       	brcs	.+44     	; 0x2c4 <__fixunssfsi+0x3e>
 298:	e1 f0       	breq	.+56     	; 0x2d2 <__fixunssfsi+0x4c>
 29a:	66 0f       	add	r22, r22
 29c:	77 1f       	adc	r23, r23
 29e:	88 1f       	adc	r24, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	1a f0       	brmi	.+6      	; 0x2aa <__fixunssfsi+0x24>
 2a4:	ba 95       	dec	r27
 2a6:	c9 f7       	brne	.-14     	; 0x29a <__fixunssfsi+0x14>
 2a8:	14 c0       	rjmp	.+40     	; 0x2d2 <__fixunssfsi+0x4c>
 2aa:	b1 30       	cpi	r27, 0x01	; 1
 2ac:	91 f0       	breq	.+36     	; 0x2d2 <__fixunssfsi+0x4c>
 2ae:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__fp_zero>
 2b2:	b1 e0       	ldi	r27, 0x01	; 1
 2b4:	08 95       	ret
 2b6:	0c 94 f9 01 	jmp	0x3f2	; 0x3f2 <__fp_zero>
 2ba:	67 2f       	mov	r22, r23
 2bc:	78 2f       	mov	r23, r24
 2be:	88 27       	eor	r24, r24
 2c0:	b8 5f       	subi	r27, 0xF8	; 248
 2c2:	39 f0       	breq	.+14     	; 0x2d2 <__fixunssfsi+0x4c>
 2c4:	b9 3f       	cpi	r27, 0xF9	; 249
 2c6:	cc f3       	brlt	.-14     	; 0x2ba <__fixunssfsi+0x34>
 2c8:	86 95       	lsr	r24
 2ca:	77 95       	ror	r23
 2cc:	67 95       	ror	r22
 2ce:	b3 95       	inc	r27
 2d0:	d9 f7       	brne	.-10     	; 0x2c8 <__fixunssfsi+0x42>
 2d2:	3e f4       	brtc	.+14     	; 0x2e2 <__fixunssfsi+0x5c>
 2d4:	90 95       	com	r25
 2d6:	80 95       	com	r24
 2d8:	70 95       	com	r23
 2da:	61 95       	neg	r22
 2dc:	7f 4f       	sbci	r23, 0xFF	; 255
 2de:	8f 4f       	sbci	r24, 0xFF	; 255
 2e0:	9f 4f       	sbci	r25, 0xFF	; 255
 2e2:	08 95       	ret

000002e4 <__floatunsisf>:
 2e4:	e8 94       	clt
 2e6:	09 c0       	rjmp	.+18     	; 0x2fa <__floatsisf+0x12>

000002e8 <__floatsisf>:
 2e8:	97 fb       	bst	r25, 7
 2ea:	3e f4       	brtc	.+14     	; 0x2fa <__floatsisf+0x12>
 2ec:	90 95       	com	r25
 2ee:	80 95       	com	r24
 2f0:	70 95       	com	r23
 2f2:	61 95       	neg	r22
 2f4:	7f 4f       	sbci	r23, 0xFF	; 255
 2f6:	8f 4f       	sbci	r24, 0xFF	; 255
 2f8:	9f 4f       	sbci	r25, 0xFF	; 255
 2fa:	99 23       	and	r25, r25
 2fc:	a9 f0       	breq	.+42     	; 0x328 <__floatsisf+0x40>
 2fe:	f9 2f       	mov	r31, r25
 300:	96 e9       	ldi	r25, 0x96	; 150
 302:	bb 27       	eor	r27, r27
 304:	93 95       	inc	r25
 306:	f6 95       	lsr	r31
 308:	87 95       	ror	r24
 30a:	77 95       	ror	r23
 30c:	67 95       	ror	r22
 30e:	b7 95       	ror	r27
 310:	f1 11       	cpse	r31, r1
 312:	f8 cf       	rjmp	.-16     	; 0x304 <__floatsisf+0x1c>
 314:	fa f4       	brpl	.+62     	; 0x354 <__floatsisf+0x6c>
 316:	bb 0f       	add	r27, r27
 318:	11 f4       	brne	.+4      	; 0x31e <__floatsisf+0x36>
 31a:	60 ff       	sbrs	r22, 0
 31c:	1b c0       	rjmp	.+54     	; 0x354 <__floatsisf+0x6c>
 31e:	6f 5f       	subi	r22, 0xFF	; 255
 320:	7f 4f       	sbci	r23, 0xFF	; 255
 322:	8f 4f       	sbci	r24, 0xFF	; 255
 324:	9f 4f       	sbci	r25, 0xFF	; 255
 326:	16 c0       	rjmp	.+44     	; 0x354 <__floatsisf+0x6c>
 328:	88 23       	and	r24, r24
 32a:	11 f0       	breq	.+4      	; 0x330 <__floatsisf+0x48>
 32c:	96 e9       	ldi	r25, 0x96	; 150
 32e:	11 c0       	rjmp	.+34     	; 0x352 <__floatsisf+0x6a>
 330:	77 23       	and	r23, r23
 332:	21 f0       	breq	.+8      	; 0x33c <__floatsisf+0x54>
 334:	9e e8       	ldi	r25, 0x8E	; 142
 336:	87 2f       	mov	r24, r23
 338:	76 2f       	mov	r23, r22
 33a:	05 c0       	rjmp	.+10     	; 0x346 <__floatsisf+0x5e>
 33c:	66 23       	and	r22, r22
 33e:	71 f0       	breq	.+28     	; 0x35c <__floatsisf+0x74>
 340:	96 e8       	ldi	r25, 0x86	; 134
 342:	86 2f       	mov	r24, r22
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	2a f0       	brmi	.+10     	; 0x354 <__floatsisf+0x6c>
 34a:	9a 95       	dec	r25
 34c:	66 0f       	add	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	88 1f       	adc	r24, r24
 352:	da f7       	brpl	.-10     	; 0x34a <__floatsisf+0x62>
 354:	88 0f       	add	r24, r24
 356:	96 95       	lsr	r25
 358:	87 95       	ror	r24
 35a:	97 f9       	bld	r25, 7
 35c:	08 95       	ret

0000035e <__fp_inf>:
 35e:	97 f9       	bld	r25, 7
 360:	9f 67       	ori	r25, 0x7F	; 127
 362:	80 e8       	ldi	r24, 0x80	; 128
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	08 95       	ret

0000036a <__fp_nan>:
 36a:	9f ef       	ldi	r25, 0xFF	; 255
 36c:	80 ec       	ldi	r24, 0xC0	; 192
 36e:	08 95       	ret

00000370 <__fp_pscA>:
 370:	00 24       	eor	r0, r0
 372:	0a 94       	dec	r0
 374:	16 16       	cp	r1, r22
 376:	17 06       	cpc	r1, r23
 378:	18 06       	cpc	r1, r24
 37a:	09 06       	cpc	r0, r25
 37c:	08 95       	ret

0000037e <__fp_pscB>:
 37e:	00 24       	eor	r0, r0
 380:	0a 94       	dec	r0
 382:	12 16       	cp	r1, r18
 384:	13 06       	cpc	r1, r19
 386:	14 06       	cpc	r1, r20
 388:	05 06       	cpc	r0, r21
 38a:	08 95       	ret

0000038c <__fp_round>:
 38c:	09 2e       	mov	r0, r25
 38e:	03 94       	inc	r0
 390:	00 0c       	add	r0, r0
 392:	11 f4       	brne	.+4      	; 0x398 <__fp_round+0xc>
 394:	88 23       	and	r24, r24
 396:	52 f0       	brmi	.+20     	; 0x3ac <__fp_round+0x20>
 398:	bb 0f       	add	r27, r27
 39a:	40 f4       	brcc	.+16     	; 0x3ac <__fp_round+0x20>
 39c:	bf 2b       	or	r27, r31
 39e:	11 f4       	brne	.+4      	; 0x3a4 <__fp_round+0x18>
 3a0:	60 ff       	sbrs	r22, 0
 3a2:	04 c0       	rjmp	.+8      	; 0x3ac <__fp_round+0x20>
 3a4:	6f 5f       	subi	r22, 0xFF	; 255
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	8f 4f       	sbci	r24, 0xFF	; 255
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	08 95       	ret

000003ae <__fp_split3>:
 3ae:	57 fd       	sbrc	r21, 7
 3b0:	90 58       	subi	r25, 0x80	; 128
 3b2:	44 0f       	add	r20, r20
 3b4:	55 1f       	adc	r21, r21
 3b6:	59 f0       	breq	.+22     	; 0x3ce <__fp_splitA+0x10>
 3b8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ba:	71 f0       	breq	.+28     	; 0x3d8 <__fp_splitA+0x1a>
 3bc:	47 95       	ror	r20

000003be <__fp_splitA>:
 3be:	88 0f       	add	r24, r24
 3c0:	97 fb       	bst	r25, 7
 3c2:	99 1f       	adc	r25, r25
 3c4:	61 f0       	breq	.+24     	; 0x3de <__fp_splitA+0x20>
 3c6:	9f 3f       	cpi	r25, 0xFF	; 255
 3c8:	79 f0       	breq	.+30     	; 0x3e8 <__fp_splitA+0x2a>
 3ca:	87 95       	ror	r24
 3cc:	08 95       	ret
 3ce:	12 16       	cp	r1, r18
 3d0:	13 06       	cpc	r1, r19
 3d2:	14 06       	cpc	r1, r20
 3d4:	55 1f       	adc	r21, r21
 3d6:	f2 cf       	rjmp	.-28     	; 0x3bc <__fp_split3+0xe>
 3d8:	46 95       	lsr	r20
 3da:	f1 df       	rcall	.-30     	; 0x3be <__fp_splitA>
 3dc:	08 c0       	rjmp	.+16     	; 0x3ee <__fp_splitA+0x30>
 3de:	16 16       	cp	r1, r22
 3e0:	17 06       	cpc	r1, r23
 3e2:	18 06       	cpc	r1, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	f1 cf       	rjmp	.-30     	; 0x3ca <__fp_splitA+0xc>
 3e8:	86 95       	lsr	r24
 3ea:	71 05       	cpc	r23, r1
 3ec:	61 05       	cpc	r22, r1
 3ee:	08 94       	sec
 3f0:	08 95       	ret

000003f2 <__fp_zero>:
 3f2:	e8 94       	clt

000003f4 <__fp_szero>:
 3f4:	bb 27       	eor	r27, r27
 3f6:	66 27       	eor	r22, r22
 3f8:	77 27       	eor	r23, r23
 3fa:	cb 01       	movw	r24, r22
 3fc:	97 f9       	bld	r25, 7
 3fe:	08 95       	ret

00000400 <itoa>:
 400:	45 32       	cpi	r20, 0x25	; 37
 402:	51 05       	cpc	r21, r1
 404:	20 f4       	brcc	.+8      	; 0x40e <itoa+0xe>
 406:	42 30       	cpi	r20, 0x02	; 2
 408:	10 f0       	brcs	.+4      	; 0x40e <itoa+0xe>
 40a:	0c 94 0b 02 	jmp	0x416	; 0x416 <__itoa_ncheck>
 40e:	fb 01       	movw	r30, r22
 410:	10 82       	st	Z, r1
 412:	cb 01       	movw	r24, r22
 414:	08 95       	ret

00000416 <__itoa_ncheck>:
 416:	bb 27       	eor	r27, r27
 418:	4a 30       	cpi	r20, 0x0A	; 10
 41a:	31 f4       	brne	.+12     	; 0x428 <__itoa_ncheck+0x12>
 41c:	99 23       	and	r25, r25
 41e:	22 f4       	brpl	.+8      	; 0x428 <__itoa_ncheck+0x12>
 420:	bd e2       	ldi	r27, 0x2D	; 45
 422:	90 95       	com	r25
 424:	81 95       	neg	r24
 426:	9f 4f       	sbci	r25, 0xFF	; 255
 428:	0c 94 17 02 	jmp	0x42e	; 0x42e <__utoa_common>

0000042c <__utoa_ncheck>:
 42c:	bb 27       	eor	r27, r27

0000042e <__utoa_common>:
 42e:	fb 01       	movw	r30, r22
 430:	55 27       	eor	r21, r21
 432:	aa 27       	eor	r26, r26
 434:	88 0f       	add	r24, r24
 436:	99 1f       	adc	r25, r25
 438:	aa 1f       	adc	r26, r26
 43a:	a4 17       	cp	r26, r20
 43c:	10 f0       	brcs	.+4      	; 0x442 <__utoa_common+0x14>
 43e:	a4 1b       	sub	r26, r20
 440:	83 95       	inc	r24
 442:	50 51       	subi	r21, 0x10	; 16
 444:	b9 f7       	brne	.-18     	; 0x434 <__utoa_common+0x6>
 446:	a0 5d       	subi	r26, 0xD0	; 208
 448:	aa 33       	cpi	r26, 0x3A	; 58
 44a:	08 f0       	brcs	.+2      	; 0x44e <__utoa_common+0x20>
 44c:	a9 5d       	subi	r26, 0xD9	; 217
 44e:	a1 93       	st	Z+, r26
 450:	00 97       	sbiw	r24, 0x00	; 0
 452:	79 f7       	brne	.-34     	; 0x432 <__utoa_common+0x4>
 454:	b1 11       	cpse	r27, r1
 456:	b1 93       	st	Z+, r27
 458:	11 92       	st	Z+, r1
 45a:	cb 01       	movw	r24, r22
 45c:	0c 94 30 02 	jmp	0x460	; 0x460 <strrev>

00000460 <strrev>:
 460:	dc 01       	movw	r26, r24
 462:	fc 01       	movw	r30, r24
 464:	67 2f       	mov	r22, r23
 466:	71 91       	ld	r23, Z+
 468:	77 23       	and	r23, r23
 46a:	e1 f7       	brne	.-8      	; 0x464 <strrev+0x4>
 46c:	32 97       	sbiw	r30, 0x02	; 2
 46e:	04 c0       	rjmp	.+8      	; 0x478 <strrev+0x18>
 470:	7c 91       	ld	r23, X
 472:	6d 93       	st	X+, r22
 474:	70 83       	st	Z, r23
 476:	62 91       	ld	r22, -Z
 478:	ae 17       	cp	r26, r30
 47a:	bf 07       	cpc	r27, r31
 47c:	c8 f3       	brcs	.-14     	; 0x470 <strrev+0x10>
 47e:	08 95       	ret

00000480 <_exit>:
 480:	f8 94       	cli

00000482 <__stop_program>:
 482:	ff cf       	rjmp	.-2      	; 0x482 <__stop_program>
